# memberjoin: helper functions to correct errors from joining our db with
# openparliament and parlinfo data, specifically member details
# please run from django shell


import urllib2
import os
import time
import gc
from dilipadsite.models import BaseHansard
import json
import urllib2
import pickle
import mysql.connector
import psycopg2

def queryset_iterator(queryset, chunksize=1000):
    
    pk = 'ca.proc.d.1901-2-11.1.1'
    last_pk = queryset.order_by('-pk')[0].pk
    queryset = queryset.order_by('pk')
    while pk < last_pk:
        for row in queryset.filter(pk__gt=pk)[:chunksize]:
            pk = row.pk
            yield row
        gc.collect()

class MemberJoin(object):

    '''Replaces openparliament-style politician ID standard with parlinfo ID'''

    def __init__(self):
        self.namesDict = {
            '3600':'25684c33-a7f5-4882-ab3f-a7e3048a5daf',
            '842':'a1bf1700-34a1-4d48-a5a7-bea4d0a251e8',
            '1738':'f778349b-4972-42c9-a933-63b201d420b1',
            '3246':'ca674b49-4a98-4bcb-b307-1f2a7ec75926',
            '697':'e7ba394d-26e9-48f5-8f6e-5830a58eb2b0',
            '3715':'a15dca5b-5596-42da-b2b0-9233f2b1787c',
            '6333':'509408dc-f21f-4f3e-ae22-40092311a13e',
            '5399':'a97e5358-616a-47c3-99ba-0a007e857649',
            '6014':'f0d35833-c7ed-47f7-aa48-008cc066072d',
            '3736':'46f04fa0-78a1-4a64-b11c-4bc961be578b',
            '2241':'48d581ee-d2d4-46ff-9f50-6934e122298f',
            '5327':'94149a29-0a58-4b95-b7d1-3600efd63c1a',
            '2789':'8793ae9b-c27b-4a75-8ecc-ce7a2d76557a',
            '3281':'3ca56fcb-0003-4a26-8ef6-d2be7648fffb',
            '2373':'5fb9d52d-5081-444d-8e36-f779c2a9ea16',
            '5806':'c8685cd7-76ff-41a0-b446-596e604bed66',
            '2780':'8a799006-b71a-456d-bb9f-457b44be967c',
            '4748':'7d4aaf1f-0363-46aa-a12f-86142886f855',
            '6548':'82e80fd5-4455-42f6-af6a-2e2de45b5e1b',
            '2831':'7b425f03-7987-45c5-8b7f-90deb5b77ef1',
            '5685':'f6572bd1-094b-41fe-9cba-29108bb23a60',
            '5740':'55ebc83a-584b-491a-a971-08a81e37b739',
            '5795':'a821d280-9b40-44e5-bae2-c039ce14a4c8',
            '3845':'e3eb3ee2-eb75-42e9-a0d8-8d73fbfe9ca6',
            '4356':'f36fd6b5-ecd6-4ba3-9668-3afcf8b6c3a0',
            '3771':'61710303-a5f1-4e63-aed1-adb4dc548e6b',
            '3656':'a5d6d87f-fe0f-40a5-8b20-1223f1e13e51',
            '6329':'1c1319e7-aa97-44f7-96c0-ddfbb3f03129',
            '3264':'2f6ffda8-d06e-435a-8a2b-27edcc6293dc',
            '2733':'5978befb-7c43-4603-90d1-8af88b24e8a7',
            '5700':'0954d45b-17c6-4c63-a6c9-365b5e5b1591',
            '1262':'69c03261-8ea2-4987-b437-486e5a3dfbd2',
            '3882':'31103860-6696-4b5b-9b22-1a0952f91b10',
            '5349':'1017a6b4-2633-42e5-a400-fda628ca60a6',
            '4237':'a16c5c75-aa1e-460f-8bf5-944aeebf3276',
            '6543':'6b5335bc-b3b4-40ed-94e3-30599c3d27fe',
            '5781':'dae80141-9438-4a13-80f7-2efc5b86b35f',
            '3363':'fcf6b6cd-31b5-4740-a22f-16ed6d417554',
            '3709':'cbf5ad4e-06cd-4f2c-97c0-f0864c44f24e',
            '4614':'8ae062d7-45bf-4308-9c58-8d12e1e90160',
            '3402':'685e1715-1ebc-4629-86cf-0194dfd2b61a',
            '6527':'13baf789-b877-4788-bc8d-c158a8872af5',
            '3344':'6d8c00fc-21f5-4791-9ba5-7a3c1460bfe9',
            '921':'09911031-a152-45f9-8701-22d07f6da86b',
            '4958':'f8e901dc-f94d-4076-9d34-c55cc0e53a3f',
            '2763':'40e1a754-dad3-455e-8e4d-ae69bf811810',
            '1698':'202393c9-3ceb-44b2-83d3-225122641cd6',
            '5818':'21f6871b-b8a2-4070-a717-be4eef4b3cbe',
            '5228':'1bbc643e-8d01-4919-8f9c-7574f65a8425',
            '5011':'abd6764e-75eb-4281-afbf-7805f56ab984',
            '6472':'7b97acd3-18f5-4d8e-b571-8697003f6ffb',
            '3574':'1732f72a-c2a7-4928-accf-96235f0cf005'
            } # for some reason, these legit members lack a parlinfo id, so it's manually added here

        self.frenchErrorDict = {'842':'a1bf1700-34a1-4d48-a5a7-bea4d0a251e8',
                          '3715':'a15dca5b-5596-42da-b2b0-9233f2b1787c',
                           '3736':'46f04fa0-78a1-4a64-b11c-4bc961be578b',
                           '2831':'7b425f03-7987-45c5-8b7f-90deb5b77ef1',
                           '2733':'2f6ffda8-d06e-435a-8a2b-27edcc6293dc',
                           '4958':'f8e901dc-f94d-4076-9d34-c55cc0e53a3f',
                           '2763':'40e1a754-dad3-455e-8e4d-ae69bf811810'
                           } # these could have failed separately due to unicode errors

        self.pollist = []
        self.parlmap = {}

    def gather(self):
        ''' gather parlinfo ids to map with openparliament ids, with added corrections as above'''
        alldata = json.load(urllib2.urlopen('http://api.openparliament.ca/politicians/?include=former&format=json'))
        for pol in alldata['objects']:
            poldetail = json.load(urllib2.urlopen('http://api.openparliament.ca/'+pol['url']+'?format=json'))
            oldid = ((poldetail['related']['activity_rss_url']).split('/'))[2]
            try:
                newid = ((poldetail['other_info']['parlinfo_id']))
            except KeyError:
                try:
                    if poldetail['name'] in list((self.namesDict.keys())):
                          newid = (self.namesDict[poldetail['name']])
                    else:
                        # could be a unicode error in a french name,  check manually for these as well.
                        if oldid in list((self.frenchErrorDict.keys())):
                            newid = (self.frenchErrorDict[oldid])
                            print("newid is" + " " +newid)
                      
                except KeyError:
                    newid = oldid
                    print(oldid+ " oldid kept.")
            self.parlmap[str(oldid)]=str(newid)

        output = open('parlmap.pkl', 'wb') # saves mapping for later use
        pickle.dump(self.parlmap, output)
        output.close()

    def write(self):

        with open('parlmap.pkl', 'rb') as afile:
            self.parlmap = pickle.load(afile)

        for oldid in list(self.parlmap.keys()):
            BaseHansard.objects.filter(speakerid=oldid).update(speakerid=self.parlmap[oldid])

    def errorsOnlyGather(self):
        '''Only fixes those ids in the manual errordict above'''

        for oldid in list(self.namesDict.keys()):
            BaseHansard.objects.filter(speakerid=oldid).update(speakerid=self.namesDict[oldid])


        


## old method for this, doesn't work properly, keeping just in case
##for line in queryset_iterator(BaseHansard.objects.all()):
### determine if this is an op-style or parlinfo-style memberid
##    tid = line.speakerid
##    if tid == None or tid == "":
##        pass
##    elif len(tid) >=30:
##        pass
##    else:
##        # it's a new style so we need to replace with parlinfo id
##        try:
##            BaseHansard.objects.get(hid = line.hid).update(speakerid = parlmap[tid])
##        except KeyError:
##            pass
        

class IDTransport():
    ''' adds on Speaker IDs to prior opdump'd records '''
    
    def __init__(self):

        self.DB_NAME = ""
        self.DB_USER = ""
        self.DB_PASS = ""

        self.MY_NAME = ""
        self.MY_USER = ""
        self.MY_PASS = ""

        self.conn = psycopg2.connect(database=self.DB_NAME, user=self.DB_USER, password=self.DB_PASS)
        self.cursor = self.conn.cursor()

        self.outconn=mysql.connector.connect(user=self.MY_USER,password=self.MY_PASS,database=self.MY_NAME)
        self.outcursor = self.outconn.cursor()

        self.idDict = {}

    def hidSplit(self,hid):
        '''Splits hid to return a dictKey'''

        dictKey = hid.split('.')[-2] + "." + hid.split('.')[-1]
        return dictKey


    def gather(self):
        ''' Pulls Speaker ID for adding on to opdump'd data;
            necessary for going b/w postgres and mysql '''

        self.cursor.execute("SELECT s.sequence, s.document_id, c.politician_id FROM hansards_statement s LEFT JOIN core_electedmember c ON s.member_id = c.id WHERE (urlcache LIKE '%debates%');")

        for record in self.cursor:
            # create a dictkey of document_id+.+sequence
            dictKey = (str(record[1])+"."+str(record[0]))
            self.idDict[dictKey] = record[2]

        output = open('idDict.pkl', 'wb') # saves mapping for later use
        pickle.dump(self.idDict, output)
        output.close()

    def write(self):

        with open('idDict.pkl', 'rb') as afile:
            self.idDict = pickle.load(afile)

        query = ("SELECT hid FROM dilipad_db.basehansard "
                "WHERE speechdate > '1994-01-01';")

        hidList = []
        self.outcursor.execute(query)

        for hid in self.outcursor:
            hidList.append(hid[0])

        for ahid in hidList:
            sid = self.idDict[self.hidSplit(ahid)]
            BaseHansard.objects.filter(hid=ahid).update(speakerid=sid)
    

class MemberJoinFix(object):

    '''placeholder class for handling non-parlimentarians'''

    def __init__(self):
            # these appear to be intervenors in committee--ie non parliamentarians.
            # these could be fixed in the future, if we wanted committee results, but I'm leaving them to be passed over for now.
            

        
        self.opidDict = {u'4132': 1, u'1564': 1, u'4026': 1, u'4027': 1, u'4024': 1, u'4025': 1, u'4022': 1, u'4020': 1, u'4021': 1,
            u'4029': 1, u'3258': 1, u'3259': 1, u'690': 1, u'4149': 1, u'4148': 1, u'1525': 1, u'3250': 1, u'3251': 1,
            u'3252': 1, u'3253': 1, u'3254': 1, u'3255': 1, u'3256': 1, u'3257': 1, u'346': 1, u'342': 1, u'343': 1,
            u'1520': 1, u'1521': 1, u'1545': 1, u'1260': 1, u'1399': 1, u'454': 1, u'1622': 1, u'1792': 1, u'1790': 1,
            u'1797': 1, u'1795': 1, u'1794': 1, u'3333': 1, u'3332': 1, u'3331': 1, u'3330': 1, u'1296': 1, u'3336': 1,
            u'3335': 1, u'3334': 1, u'1498': 1, u'1627': 1, u'3339': 1, u'3338': 1, u'423': 1, u'4078': 1, u'1700': 1,
            u'1068': 1, u'1702': 1, u'1625': 1, u'1709': 1, u'1063': 1, u'1624': 1, u'967': 1, u'1067': 1, u'1392': 1,
            u'1391': 1, u'4115': 1, u'1665': 1, u'4077': 1, u'1128': 1, u'590': 1, u'592': 1, u'1083': 1, u'1081': 1,
            u'598': 1, u'1124': 1, u'969': 1, u'3140': 1, u'3141': 1, u'3142': 1, u'3143': 1, u'3144': 1, u'3145': 1,
            u'3146': 1, u'3147': 1, u'3148': 1, u'3149': 1, u'3670': 1, u'3671': 1, u'3677': 1, u'3674': 1, u'3675': 1,
            u'2543': 1, u'2542': 1, u'2541': 1, u'2540': 1, u'2547': 1, u'2546': 1, u'2545': 1, u'2544': 1, u'1490': 1,
            u'2549': 1, u'2548': 1, u'525': 1, u'1409': 1, u'521': 1, u'522': 1, u'1403': 1, u'1015': 1, u'1401': 1,
            u'1400': 1, u'1407': 1, u'529': 1, u'1405': 1, u'1404': 1, u'1234': 1, u'1546': 1, u'1236': 1, u'1237': 1,
            u'1339': 1, u'1338': 1, u'1491': 1, u'1547': 1, u'442': 1, u'2448': 1, u'2449': 1, u'1331': 1, u'1544': 1,
            u'1333': 1, u'1332': 1, u'2526': 1, u'1514': 1, u'1517': 1, u'4116': 1, u'1510': 1, u'1492': 1, u'1448': 1,
            u'4117': 1, u'1843': 1, u'1511': 1, u'1841': 1, u'1840': 1, u'4114': 1, u'1844': 1, u'3092': 1, u'3093': 1,
            u'3090': 1, u'3091': 1, u'3096': 1, u'3097': 1, u'1531': 1, u'3095': 1, u'1249': 1, u'1248': 1, u'3098': 1,
            u'3099': 1, u'4164': 1, u'2484': 1, u'1539': 1, u'1538': 1, u'2616': 1, u'2614': 1, u'339': 1, u'4110': 1,
            u'2611': 1, u'4081': 1, u'2482': 1, u'337': 1, u'4111': 1, u'4082': 1, u'2618': 1,
            u'4101': 1, u'4100': 1, u'4103': 1, u'4083': 1, u'3298': 1, u'3299': 1, u'4107': 1, u'4106': 1,
            u'3294': 1, u'3295': 1, u'3296': 1, u'3297': 1, u'3290': 1, u'3291': 1, u'3292': 1, u'3293': 1,
            u'1494': 1, u'4086': 1, u'4088': 1, u'4118': 1, u'2684': 1, u'2685': 1, u'2687': 1, u'2680': 1,
            u'1495': 1, u'2738': 1, u'1211': 1, u'4076': 1, u'3207': 1, u'3206': 1, u'3205': 1, u'3204': 1,
            u'3203': 1, u'3202': 1, u'3201': 1, u'3200': 1, u'4075': 1, u'4074': 1,u'1629': 1, u'1628': 1,
            u'4071': 1, u'4070': 1, u'3209': 1, u'3208': 1, u'560': 1, u'1023': 1, u'1317': 1, u'1294': 1, u'4146': 1,
            u'3639': 1, u'557': 1, u'1548': 1, u'552': 1, u'3063': 1, u'3062': 1, u'3061': 1, u'3060': 1, u'3067': 1,
            u'3066': 1, u'3065': 1, u'3064': 1, u'2709': 1, u'3069': 1, u'3068': 1, u'440': 1, u'448': 1,
            u'1735': 1, u'3342': 1, u'3343': 1, u'3340': 1, u'3341': 1, u'1194': 1, u'1692': 1, u'4073': 1,
            u'1759': 1, u'1758': 1, u'1755': 1, u'1753': 1, u'1278': 1, u'1279': 1, u'1175': 1, u'1173': 1,
            u'1170': 1, u'1270': 1, u'1271': 1, u'1272': 1, u'1273': 1, u'1274': 1, u'1275': 1, u'1276': 1,
            u'1277': 1, u'4072': 1, u'510': 1, u'3702': 1, u'1054': 1, u'3700': 1, u'3701': 1, u'1438': 1,
            u'1595': 1, u'1284': 1, u'1287': 1, u'1286': 1, u'1281': 1, u'1280': 1, u'3119': 1, u'3118': 1, u'3117': 1,
            u'3116': 1, u'3115': 1, u'3114': 1, u'3113': 1, u'3112': 1, u'3111': 1, u'3110': 1, u'1472': 1, u'1473': 1,
            u'2538': 1, u'1578': 1, u'1476': 1, u'1474': 1, u'1190': 1, u'2532': 1, u'1572': 1, u'2530': 1, u'1479': 1,
            u'2536': 1, u'2537': 1, u'1575': 1, u'1574': 1, u'2712': 1, u'2713': 1, u'2659': 1, u'2658': 1, u'2716': 1,
            u'2717': 1, u'1302': 1, u'2715': 1, u'2652': 1, u'2651': 1, u'1240': 1, u'1308': 1, u'498': 1, u'1499': 1,
            u'949': 1, u'490': 1, u'492': 1, u'1832': 1, u'2741': 1, u'1830': 1, u'1831': 1, u'1836': 1, u'1837': 1,
            u'2740': 1, u'1838': 1, u'1839': 1, u'2743': 1, u'1371': 1, u'1370': 1, u'1373': 1, u'2742': 1, u'1374': 1,
            u'1377': 1, u'4145': 1, u'2745': 1, u'1478': 1, u'2744': 1, u'1069': 1, u'1343': 1, u'2747': 1, u'1242': 1,
            u'1344': 1, u'4098': 1, u'1345': 1, u'4031': 1, u'4030': 1, u'4033': 1, u'4032': 1, u'4035': 1, u'1346': 1,
            u'4037': 1, u'4036': 1, u'4039': 1, u'4038': 1, u'4138': 1, u'4139': 1, u'3249': 1, u'3248': 1, u'3243': 1,
            u'4131': 1, u'3241': 1, u'3240': 1, u'3247': 1, u'4135': 1, u'3245': 1, u'3244': 1, u'4147': 1, u'829': 1,
            u'441': 1, u'372': 1, u'1827': 1, u'376': 1, u'1600': 1, u'892': 1, u'1483': 1, u'1482': 1, u'391': 1,
            u'1480': 1, u'1486': 1, u'3308': 1, u'3309': 1, u'3306': 1, u'3307': 1, u'3304': 1, u'3305': 1, u'3302': 1,
            u'3303': 1, u'3300': 1, u'3301': 1, u'4044': 1, u'4045': 1, u'4046': 1, u'4047': 1, u'4040': 1, u'4041': 1,
            u'4042': 1, u'929': 1, u'1266': 1, u'381': 1, u'1718': 1, u'4048': 1, u'4049': 1, u'4141': 1, u'1659': 1,
            u'2487': 1, u'1652': 1, u'1656': 1, u'610': 1, u'4161': 1, u'1246': 1, u'1739': 1, u'583': 1, u'580': 1,
            u'4063': 1, u'4060': 1, u'3153': 1, u'3152': 1, u'3151': 1, u'3150': 1, u'3157': 1, u'3156': 1, u'3155': 1,
            u'3154': 1, u'4061': 1, u'3159': 1, u'3158': 1, u'1348': 1, u'1439': 1, u'1436': 1, u'1434': 1, u'1435': 1,
            u'1432': 1, u'1636': 1, u'2578': 1, u'1549': 1, u'2577': 1, u'1431': 1, u'2570': 1, u'2571': 1, u'519': 1,
            u'518': 1, u'4066': 1, u'1007': 1, u'1458': 1, u'1310': 1, u'512': 1, u'1349': 1, u'517': 1, u'1000': 1,
            u'2594': 1, u'2595': 1, u'2596': 1, u'2591': 1, u'2592': 1, u'450': 1, u'2454': 1, u'2457': 1, u'2456': 1,
            u'2451': 1, u'2599': 1, u'2453': 1, u'1084': 1, u'4067': 1, u'1459': 1, u'1607': 1, u'1535': 1, u'3699': 1,
            u'1111': 1, u'973': 1, u'3693': 1, u'3694': 1, u'979': 1, u'978': 1, u'1502': 1, u'1500': 1, u'4064': 1,
            u'3089': 1, u'3088': 1, u'1121': 1, u'3085': 1, u'3084': 1, u'3087': 1, u'3086': 1, u'3081': 1, u'3080': 1,
            u'3083': 1, u'3082': 1, u'2622': 1, u'1285': 1, u'2620': 1, u'2624': 1, u'2625': 1, u'4034': 1, u'2480': 1,
            u'4150': 1, u'4065': 1, u'4151': 1, u'4160': 1, u'3289': 1, u'3287': 1, u'3286': 1, u'3285': 1, u'3284': 1,
            u'3283': 1, u'3282': 1, u'1227': 1, u'3280': 1, u'1364': 1, u'1283': 1, u'1598': 1, u'1282': 1, u'320': 1,
            u'477': 1, u'1149': 1, u'3679': 1, u'2698': 1, u'2697': 1, u'2696': 1, u'2695': 1, u'1226': 1, u'1603': 1,
            u'4159': 1, u'4017': 1, u'4016': 1, u'3672': 1, u'4015': 1, u'3673': 1, u'941': 1, u'1362': 1, u'4062': 1,
            u'3232': 1, u'3233': 1, u'3230': 1, u'3231': 1, u'3236': 1, u'3237': 1, u'3234': 1, u'3235': 1, u'1616': 1,
            u'3238': 1, u'3239': 1, u'2528': 1, u'1078': 1, u'1611': 1, u'322': 1, u'1293': 1, u'1534': 1, u'1471': 1,
            u'326': 1, u'327': 1, u'1363': 1, u'4093': 1, u'2629': 1, u'1290': 1, u'1573': 1, u'4153': 1, u'3058': 1,
            u'3059': 1, u'3056': 1, u'3057': 1, u'3054': 1, u'3055': 1, u'3052': 1, u'3053': 1, u'3050': 1, u'3051': 1,
            u'3179': 1, u'686': 1, u'1046': 1, u'3178': 1, u'1577': 1, u'1048': 1, u'1576': 1, u'1687': 1, u'1506': 1,
            u'1762': 1, u'1591': 1, u'1761': 1, u'1590': 1, u'1304': 1, u'1269': 1, u'1268': 1, u'1146': 1, u'1593': 1,
            u'1305': 1, u'1263': 1, u'1261': 1, u'1592': 1, u'1267': 1, u'2710': 1, u'1265': 1, u'1264': 1, u'3171': 1,
            u'1507': 1, u'3079': 1, u'3654': 1, u'3655': 1, u'3650': 1, u'3651': 1, u'3652': 1, u'3653': 1, u'2525': 1,
            u'2524': 1, u'3128': 1, u'3129': 1, u'2521': 1, u'1543': 1, u'2523': 1, u'1541': 1, u'3122': 1, u'3123': 1,
            u'3120': 1, u'2485': 1, u'3126': 1, u'2483': 1, u'3124': 1, u'2481': 1, u'543': 1, u'541': 1, u'1469': 1,
            u'1468': 1, u'545': 1, u'1465': 1, u'1464': 1, u'1467': 1, u'1466': 1, u'1460': 1, u'1040': 1, u'2464': 1,
            u'1316': 1, u'1314': 1, u'2460': 1, u'2461': 1, u'2463': 1, u'1533': 1, u'2704': 1, u'4157': 1, u'1303': 1,
            u'2702': 1, u'4120': 1, u'1256': 1, u'3049': 1, u'1828': 1, u'1824': 1, u'1594': 1, u'404': 1, u'1821': 1,
            u'1011': 1, u'1579': 1, u'417': 1, u'1388': 1, u'1389': 1, u'413': 1, u'1387': 1, u'1380': 1, u'942': 1,
            u'1382': 1, u'1383': 1, u'4142': 1, u'1235': 1, u'313': 1, u'312': 1, u'311': 1, u'1360': 1, u'1183': 1,
            u'3276': 1, u'3277': 1, u'3274': 1, u'3275': 1, u'3272': 1, u'3273': 1, u'3270': 1, u'3271': 1, u'1230': 1,
            u'475': 1, u'3278': 1, u'3279': 1, u'4129': 1, u'4128': 1, u'4123': 1, u'4122': 1, u'4121': 1, u'1508': 1,
            u'4127': 1, u'4126': 1, u'4125': 1, u'4124': 1, u'2667': 1, u'2665': 1, u'2662': 1, u'2663': 1, u'2660': 1,
            u'364': 1, u'362': 1, u'1337': 1, u'2668': 1, u'361': 1, u'4158': 1, u'1336': 1, u'1833': 1, u'1368': 1,
            u'1239': 1, u'3319': 1, u'3318': 1, u'1306': 1, u'923': 1, u'445': 1, u'3311': 1, u'3310': 1, u'3313': 1,
            u'3312': 1, u'3315': 1, u'3314': 1, u'3317': 1, u'3316': 1, u'1645': 1, u'4056': 1, u'4055': 1, u'1646': 1,
            u'780': 1, u'1640': 1, u'1643': 1, u'1369': 1, u'1835': 1, u'1649': 1, u'4057': 1, u'4059': 1, u'4058': 1,
            u'1229': 1, u'578': 1, u'577': 1, u'576': 1, u'1300': 1, u'388': 1, u'1167': 1, u'3168': 1, u'3169': 1,
            u'3166': 1, u'3167': 1, u'3164': 1, u'3165': 1, u'3162': 1, u'3163': 1, u'3161': 1, u'2569': 1, u'1588': 1,
            u'1589': 1, u'1426': 1, u'1582': 1, u'3125': 1, u'1580': 1, u'1581': 1, u'1586': 1, u'1587': 1, u'1584': 1,
            u'2566': 1, u'4099': 1, u'1372': 1, u'1393': 1, u'500': 1, u'4143': 1, u'2587': 1, u'1213': 1, u'2585': 1,
            u'1358': 1, u'1214': 1, u'4054': 1, u'1353': 1, u'464': 1, u'1351': 1, u'1350': 1, u'1357': 1, u'1356': 1,
            u'2589': 1, u'2588': 1, u'528': 1, u'906': 1, u'931': 1, u'4052': 1, u'465': 1, u'1571': 1, u'3689': 1,
            u'3688': 1, u'1551': 1, u'963': 1, u'3683': 1, u'3682': 1, u'4050': 1, u'3687': 1, u'3686': 1, u'3685': 1,
            u'3684': 1, u'1455': 1, u'1456': 1, u'1450': 1, u'1453': 1, u'2514': 1, u'2515': 1, u'2516': 1, u'2517': 1,
            u'2510': 1, u'2511': 1, u'1513': 1, u'2513': 1, u'2734': 1, u'2735': 1, u'2736': 1, u'2737': 1, u'2639': 1,
            u'2731': 1, u'2732': 1, u'4087': 1, u'2635': 1, u'4089': 1, u'2631': 1, u'2739': 1, u'2632': 1, u'1537': 1,
            u'1241': 1, u'1810': 1, u'1811': 1, u'1813': 1, u'1243': 1, u'3184': 1, u'3185': 1, u'3186': 1, u'3187': 1,
            u'3180': 1, u'3181': 1, u'3182': 1, u'3183': 1, u'938': 1, u'1245': 1, u'466': 1, u'3188': 1, u'3189': 1,
            u'1244': 1, u'1619': 1, u'1156': 1, u'1247': 1, u'4051': 1, u'897': 1, u'898': 1, u'1530': 1, u'4165': 1,
            u'1099': 1, u'436': 1, u'1552': 1, u'4163': 1, u'4162': 1, u'1609': 1, u'1608': 1, u'4019': 1, u'4018': 1,
            u'4156': 1, u'3228': 1, u'4154': 1, u'4155': 1, u'3225': 1, u'3224': 1, u'3227': 1, u'3226': 1, u'1605': 1,
            u'3220': 1, u'3223': 1, u'3222': 1, u'357': 1, u'351': 1, u'358': 1, u'769': 1, u'4102': 1, u'1781': 1,
            u'1536': 1, u'1784': 1, u'3320': 1, u'3321': 1, u'3322': 1, u'3323': 1, u'3324': 1, u'3325': 1, u'3326': 1,
            u'3327': 1, u'3328': 1, u'3329': 1, u'1775': 1, u'1774': 1, u'1777': 1, u'1771': 1, u'1770': 1, u'1773': 1,
            u'3643': 1, u'1072': 1, u'1445': 1, u'4140': 1, u'1071': 1, u'1444': 1, u'368': 1, u'1675': 1, u'3640': 1,
            u'2499': 1, u'4104': 1, u'1441': 1, u'1550': 1, u'1440': 1, u'1553': 1, u'1152': 1, u'3135': 1, u'3134': 1,
            u'3137': 1, u'3136': 1, u'3131': 1, u'3130': 1, u'3133': 1, u'1561': 1, u'3646': 1, u'3645': 1, u'332': 1,
            u'3139': 1, u'3138': 1, u'1554': 1, u'2550': 1, u'2551': 1, u'2552': 1, u'2553': 1, u'2555': 1, u'2556': 1,
            u'1556': 1, u'2729': 1, u'1558': 1, u'2493': 1, u'2495': 1, u'2497': 1, u'2496': 1, u'1559': 1, u'4080': 1,
            u'534': 1, u'1566': 1, u'536': 1, u'4105': 1, u'1412': 1, u'1567': 1, u'1414': 1, u'1415': 1, u'1416': 1,
            u'1417': 1, u'2476': 1, u'2475': 1, u'1532': 1, u'2473': 1, u'1327': 1, u'1324': 1, u'4092': 1, u'4134': 1,
            u'1328': 1, u'1329': 1, u'2478': 1, u'4109': 1, u'4090': 1, u'4136': 1, u'4108': 1, u'4137': 1, u'1233': 1,
            u'4096': 1, u'1289': 1, u'1419': 1, u'4094': 1, u'1524': 1, u'1257': 1, u'1254': 1, u'1255': 1, u'1252': 1,
            u'1253': 1, u'1250': 1, u'1251': 1, u'1397': 1, u'1396': 1, u'1395': 1, u'1394': 1, u'1528': 1, u'1529': 1,
            u'1258': 1, u'1259': 1, u'854': 1, u'2606': 1, u'2607': 1, u'2600': 1, u'2601': 1, u'1423': 1, u'4053': 1,
            u'3261': 1, u'3260': 1, u'3263': 1, u'3262': 1, u'3265': 1, u'3264': 1, u'3267': 1, u'3266': 1, u'3269': 1,
            u'3268': 1, u'458': 1, u'4119': 1, u'826': 1, u'4152': 1, u'4084': 1, u'374': 1, u'2670': 1, u'2673': 1,
            u'539': 1, u'2677': 1, u'2676': 1, u'2679': 1, u'4079': 1, u'4112': 1, u'1323': 1, u'4085': 1, u'4144': 1,
            u'1320': 1, u'1321': 1, u'4113': 1, u'3214': 1, u'3215': 1, u'3216': 1, u'3217': 1, u'3210': 1, u'3211': 1,
            u'3212': 1, u'3213': 1, u'1731': 1, u'4068': 1, u'4069': 1, u'3218': 1, u'3219': 1, u'1238': 1, u'1288': 1,
            u'4133': 1, u'1583': 1, u'1166': 1, u'2638': 1, u'561': 1, u'564': 1, u'567': 1, u'3070': 1, u'3071': 1,
            u'3072': 1, u'3073': 1, u'3074': 1, u'3075': 1, u'3076': 1, u'3077': 1, u'3078': 1, u'3170': 1, u'3173': 1,
            u'3172': 1, u'3174': 1, u'3177': 1, u'3176': 1, u'1059': 1, u'1027': 1, u'1026': 1, u'1021': 1, u'1188': 1,
            u'392': 1, u'995': 1, u'1029': 1, u'1028': 1, u'722': 1, u'1749': 1, u'1746': 1, u'526': 1, u'396': 1,
            u'604': 1, u'607': 1, u'606': 1, u'601': 1, u'1485': 1, u'1205': 1, u'1484': 1, u'1560': 1, u'1161': 1,
            u'1489': 1, u'1429': 1, u'1488': 1, u'3108': 1, u'3109': 1, u'3104': 1, u'3105': 1, u'3106': 1, u'3107': 1,
            u'3100': 1, u'3101': 1, u'3102': 1, u'3103': 1, u'1568': 1, u'1569': 1, u'1298': 1, u'1299': 1, u'2509': 1,
            u'2508': 1, u'2507': 1, u'2506': 1, u'2505': 1, u'1563': 1, u'2503': 1, u'1565': 1, u'2501': 1, u'2500': 1,
            u'2727': 1, u'1102': 1, u'4091': 1, u'2724': 1, u'4097': 1, u'2722': 1, u'4095': 1, u'2720': 1, u'2640': 1,
            u'4130': 1, u'2642': 1, u'1361': 1, u'2644': 1, u'2645': 1, u'2646': 1, u'1562': 1, u'489': 1, u'487': 1,
            u'1354': 1, u'482': 1, u'1807': 1, u'1805': 1, u'4043': 1, u'3197': 1, u'3196': 1, u'3195': 1, u'3194': 1,
            u'3193': 1, u'3192': 1, u'3191': 1, u'3190': 1, u'1765': 1, u'3199': 1, u'3198': 1}
                        
            

    


    


                
        


        

